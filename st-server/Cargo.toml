[package]
name = "st-server"
version = "0.1.0"
edition = "2021"


[lib]
crate-type = ["cdylib", "rlib"]


[dependencies]

leptos = { version = "0.8.2" }
leptos_router = { version = "0.8.2" }
leptos_axum = { version = "0.8.2", optional = true }
leptos_meta = { version = "0.8.2" }
leptos-use = { version = "0.16.0-beta", features = ["use_interval", "use_interval_fn"] }
#leptos-struct-table = { version = "0.14.0-beta2", features = ["chrono"] }
leptos-struct-table = { git = "https://github.com/FloWi/leptos-struct-table", branch = "leptos-0-8", features = ["chrono"] }
phosphor-leptos = { version = "0.8.0", default-features = false, features = ["objects", "finance", "commerce", "system", "development"] }
axum = { version = "0.8", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
wasm-bindgen = { version = "=0.2.100", optional = true }
serde_json = { version = "1.0.139" }
itertools = { workspace = true }
chrono = { workspace = true, features = ["serde"] }

st-domain = { path = "../st-domain" }
st-store = { path = "../st-store", optional = true }
st-core = { path = "../st-core", optional = true }
serde = { version = "1.0.206", features = ["derive"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "std", "json", "time"], optional = true }
clap = { version = "4.5.4", features = ["derive", "env"], optional = true }
dotenv = { version = "0.15.0", optional = true }
wasm-bindgen-futures = { version = "0.4.50" }
anyhow = { workspace = true, features = ["backtrace"] }
tracing = { workspace = true, optional = true }
tracing-appender = { version = "0.2", optional = true }
time = { version = "0.3.39", features = ["formatting", "macros"], optional = true }
lazy_static = { version = "1.5.0", optional = true }
uuid = { version = "1.16.0", features = ["v4", "js"] }
thousands = { workspace = true }
rust-sugiyama = { version = "0.3.0" }
# don't upgrade petgraph, since sugiyama depends on 0.6.4
petgraph = "0.6.4"

# needs to be built with
# RUSTFLAGS="--cfg tokio_unstable" set in ./cargo/config.toml
console-subscriber = { version = "0.4.1", optional = true }  # Check for the latest version



[[bin]]
name = "st-cli"
path = "src/bin/cli.rs"
required-features = ["ssr", "cli"]

[dev-dependencies]
tracing-test = "0.2.5"

[features]
hydrate = [
    "leptos/hydrate",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen",
]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "st-core",
    "st-store",
    "dep:tracing-subscriber",
    "dep:dotenv",
    "leptos-use/ssr"
]
cli = [
    "dep:tracing-subscriber",
    "dep:tracing",
    "dep:tracing-appender",
    "dep:clap",
    "dep:time",
    "dep:lazy_static",
    "dep:console-subscriber",
]


# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]

bin-target = "st-server"

# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "flwi-spacetraders-agent"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# The tailwind config file.
#
# Optional, defaults to "tailwind.config.js" which if is not present
# is generated for you
tailwind-config-file = "tailwind.config.js"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
